name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi


      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} run build

      - name: Force static export if needed
        run: |
          if [ ! -d "./out" ]; then
            echo "No out directory found, attempting next export..."
            if grep -q "output.*export" next.config.js; then
              echo "Config already has output: 'export', running export..."
              ${{ steps.detect-package-manager.outputs.runner }} run export
            else
              echo "Temporarily adding 'output: export' to next.config.js..."
              cp next.config.js next.config.js.backup
              sed "s/const nextConfig = {/const nextConfig = {\n  output: 'export',/" next.config.js > next.config.js.tmp
              mv next.config.js.tmp next.config.js
              ${{ steps.detect-package-manager.outputs.runner }} run export
              mv next.config.js.backup next.config.js
            fi
          else
            echo "Found out directory, skipping export."
          fi

      - name: Final check for out directory
        run: |
          if [ -d "./out" ]; then
            echo "✅ out directory exists"
            ls -la ./out | head -20
            echo "Total files: $(find ./out -type f | wc -l)"
          else
            echo "❌ out directory missing!"
            exit 1
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
